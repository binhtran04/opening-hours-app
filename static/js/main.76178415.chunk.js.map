{"version":3,"sources":["assets/icons/clock-regular.svg","utils/index.js","actions/types.js","components/FileInput/index.js","actions/index.js","components/ui/Typography/index.js","components/OpeningHours/DayDisplay.js","components/OpeningHours/HoursDisplay.js","components/OpeningHours/InfoItem.js","components/OpeningHours/InfoList.js","components/OpeningHours/index.js","App.js","reducers/index.js","reducers/openingHours.js","index.js"],"names":["module","exports","__webpack_require__","p","getDayIndex","dayOfWeek","toLowerCase","GET_JSON_FROM_INPUT","FileInput","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inputError","handleFileChange","event","reader","FileReader","onload","onReaderLoad","target","files","readAsText","openingHoursObj","JSON","parse","result","isValidOpeningHoursJson","props","getJsonFromInput","setState","inputObj","valid","keys","forEach","key","isArray","inherits","createClass","value","react_default","a","createElement","className","htmlFor","type","id","name","accept","onChange","Component","connect","jsonData","payload","_sortByHourValue","b","weeklyOpeningHours","map","hours","sort","index","Typography","classes","classNames","variant","children","defaultProps","DayDisplay","_ref","day","isToday","ui_Typography","HoursDisplay","hoursDisplayText","formattedHours","hourDisplayText","item","generateHoursDisplayText","h","unixTime","isNaN","parseInt","convertedDate","Date","isPM","getUTCHours","isMidday","minutes","getUTCMinutes","substr","formatUnixTime","hourClass","hour","closed","InfoItem","todayHours","nextDayHours","currentDay","nextDay","openingHours","slice","toConsumableArray","today","todayIndex","getDay","currentDayIndex","OpeningHours_DayDisplay","OpeningHours_HoursDisplay","InfoList","array","nextItem","OpeningHours_InfoItem","OpeningHours","src","clockIcon","alt","OpeningHours_InfoList","App","components_FileInput","components_OpeningHours","rootReducer","combineReducers","undefined","action","ReactDOM","render","es","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.76178415.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock-regular.54749a5a.svg\";","/**\n * Get the unix time and return the corresponding time string\n * @param {number} unixTime\n * @returns {string} 12 hour format e.g. 10 AM\n */\nexport const formatUnixTime = unixTime => {\n  if (isNaN(parseInt(unixTime, 10))) {\n    return \"\";\n  }\n  const convertedDate = new Date(unixTime * 1000);\n  const isPM = convertedDate.getUTCHours() >= 12;\n  const isMidday = convertedDate.getUTCHours() === 12;\n  const hours = convertedDate.getUTCHours() - (isPM && !isMidday ? 12 : 0);\n  const minutes =\n    convertedDate.getUTCMinutes() === 0\n      ? \"\"\n      : \"0\" + convertedDate.getUTCMinutes();\n\n  return `${hours}${minutes === \"\" ? \"\" : \".\" + minutes.substr(-2)} ${\n    isPM ? \"PM\" : \"AM\"\n  }`;\n};\n\n/**\n *\n * @param {string} dayOfWeek\n * @returns {number} index of the day\n */\nexport const getDayIndex = dayOfWeek => {\n  if (typeof dayOfWeek !== \"string\") {\n    return 1000;\n  }\n  switch (dayOfWeek.toLowerCase()) {\n    case \"monday\":\n      return 1;\n    case \"tuesday\":\n      return 2;\n    case \"wednesday\":\n      return 3;\n    case \"thursday\":\n      return 4;\n    case \"friday\":\n      return 5;\n    case \"saturday\":\n      return 6;\n    case \"sunday\":\n      return 7;\n    default:\n      return 1000;\n  }\n};\n\n/**\n * Compare the opening hours of two concecutive days\n * and return the correct opening hours for the current day.\n * @param {array} todayHours\n * @param {array} nextDayHours\n * @returns {array} correct opening hours\n */\nexport const getOpeningHours = (todayHours, nextDayHours) => {\n  if (!todayHours.length) {\n    return [];\n  }\n\n  // remove the first hour if type close\n  if (todayHours[0].type === \"close\") {\n    todayHours = todayHours.slice(1);\n  }\n\n  // add the close hour from the next day if any\n  if (\n    todayHours[todayHours.length - 1].type === \"open\" &&\n    nextDayHours[0].type === \"close\"\n  ) {\n    var hours = [...todayHours, nextDayHours[0]];\n    return hours;\n  }\n\n  return todayHours;\n};\n\n/**\n * Take day of the week and return true if the day is today\n * otherwise return false\n * @param {string} dayOfWeek\n * @returns {boolean} isToday\n */\nexport const isToday = dayOfWeek => {\n  const now = new Date();\n  const todayIndex = now.getDay();\n  const currentDayIndex = getDayIndex(dayOfWeek);\n\n  return (\n    todayIndex === currentDayIndex ||\n    (todayIndex === 0 && currentDayIndex === 7)\n  );\n};\n","export const GET_JSON_FROM_INPUT = \"get_json_from_input\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./FileInput.css\";\nimport { getDayIndex } from \"../../utils\";\n\nimport { connect } from \"react-redux\";\nimport { getJsonFromInput } from \"../../actions\";\n\nexport class FileInput extends Component {\n  state = {\n    inputError: false\n  };\n\n  handleFileChange = event => {\n    const reader = new FileReader();\n    reader.onload = this.onReaderLoad;\n    if (event.target.files[0]) {\n      reader.readAsText(event.target.files[0]);\n    }\n  };\n\n  // event handler for FileReader onload\n  onReaderLoad = event => {\n    const openingHoursObj = JSON.parse(event.target.result);\n\n    if (this.isValidOpeningHoursJson(openingHoursObj)) {\n      this.props.getJsonFromInput(openingHoursObj);\n      this.setState({ inputError: false });\n    } else {\n      this.props.getJsonFromInput(false);\n      this.setState({ inputError: true });\n    }\n  };\n\n  isValidOpeningHoursJson = inputObj => {\n    let valid = true;\n    Object.keys(inputObj).forEach(key => {\n      // key has to be a day of week\n      // and obj has to have valid hours array\n      valid = valid && getDayIndex(key) <= 7 && Array.isArray(inputObj[key]);\n    });\n\n    return valid;\n  };\n\n  render() {\n    return (\n      <div className=\"fileinput\">\n        <label htmlFor=\"file\">Choose a JSON file</label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          name=\"file\"\n          accept=\"application/json\"\n          onChange={this.handleFileChange}\n        />\n        {this.state.inputError && (\n          <div className=\"fileinput__error\">Invalid opening hours JSON</div>\n        )}\n      </div>\n    );\n  }\n}\n\nFileInput.propTypes = {\n  getJsonFromInput: PropTypes.func\n};\n\nexport default connect(\n  null,\n  { getJsonFromInput }\n)(FileInput);\n","import { GET_JSON_FROM_INPUT } from \"./types\";\nimport { getDayIndex } from \"../utils\";\n\nexport function getJsonFromInput(jsonData) {\n  if (!jsonData) {\n    return {\n      type: GET_JSON_FROM_INPUT,\n      payload: []\n    };\n  }\n\n  const _sortByDayOfWeek = (a, b) => {\n    const dayIndexA = getDayIndex(a.dayOfWeek);\n    const dayIndexB = getDayIndex(b.dayOfWeek);\n    return dayIndexA - dayIndexB;\n  };\n\n  const _sortByHourValue = (a, b) => {\n    return a.value - b.value;\n  };\n\n  const weeklyOpeningHours = Object.keys(jsonData)\n    .map(dayOfWeek => {\n      const hours = jsonData[dayOfWeek].sort(_sortByHourValue);\n\n      const item = {\n        dayOfWeek,\n        index: getDayIndex(dayOfWeek),\n        hours\n      };\n\n      return item;\n    })\n    .sort(_sortByDayOfWeek);\n\n  return {\n    type: GET_JSON_FROM_INPUT,\n    payload: weeklyOpeningHours\n  };\n}\n","import React from \"react\";\nimport \"./Typography.css\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst Typography = props => {\n  const classes = classNames(props.variant, props.className);\n  return <div className={classes}>{props.children}</div>;\n};\n\nTypography.defaultProps = {\n  variant: \"paragraph\"\n};\n\nTypography.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.any,\n  variant: PropTypes.oneOf([\"heading1\", \"heading3\", \"heading4\", \"paragraph\"])\n};\n\nexport default Typography;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"../ui/Typography\";\n\nconst DayDisplay = ({ day, isToday }) => {\n  return (\n    <div className=\"day__wrapper\">\n      <Typography variant=\"heading3\" className=\"day__dayoftheweek\">\n        {day}\n      </Typography>\n\n      {isToday && (\n        <Typography variant=\"heading4\" className=\"day__today\">\n          TODAY\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nDayDisplay.propTypes = {\n  day: PropTypes.string.isRequired,\n  isToday: PropTypes.bool\n};\n\nexport default DayDisplay;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatUnixTime } from \"../../utils\";\nimport Typography from \"../ui/Typography\";\nimport classNames from \"classnames\";\n\nconst HoursDisplay = ({ hours }) => {\n  const generateHoursDisplayText = formattedHours => {\n    if (!formattedHours.length) {\n      return \"Closed\";\n    }\n\n    let hourDisplayText = \"\";\n    formattedHours.forEach((item, index) => {\n      if (index === 0) {\n        hourDisplayText += item;\n        return;\n      }\n      if (index % 2 === 0) {\n        hourDisplayText += `, ${item}`;\n      } else {\n        hourDisplayText += ` - ${item}`;\n      }\n    });\n\n    return hourDisplayText;\n  };\n\n  const formattedHours = hours.map(h => formatUnixTime(h.value));\n  const hoursDisplayText = generateHoursDisplayText(formattedHours);\n\n  const hourClass = classNames({\n    hour: true,\n    closed: hoursDisplayText === \"Closed\"\n  });\n  return (\n    <Typography variant=\"paragraph\" className={hourClass}>\n      {hoursDisplayText}\n    </Typography>\n  );\n};\n\nHoursDisplay.propTypes = {\n  hours: PropTypes.array.isRequired\n};\n\nexport default HoursDisplay;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getOpeningHours, isToday } from \"../../utils/index\";\nimport DayDisplay from \"./DayDisplay\";\nimport HoursDisplay from \"./HoursDisplay\";\n\nconst InfoItem = ({ currentDay, nextDay }) => {\n  const openingHours = getOpeningHours(currentDay.hours, nextDay.hours);\n  const today = isToday(currentDay.dayOfWeek);\n\n  return (\n    <div className=\"content__row\">\n      <DayDisplay day={currentDay.dayOfWeek} isToday={today} />\n      <HoursDisplay hours={openingHours} />\n    </div>\n  );\n};\n\nInfoItem.propTypes = {\n  currentDay: PropTypes.object,\n  nextDay: PropTypes.object\n};\n\nexport default InfoItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport InfoItem from \"./InfoItem\";\n\nconst InfoList = props => {\n  const renderOpeningHours = weeklyOpeningHours =>\n    weeklyOpeningHours.map((item, index, array) => {\n      // if current item is the last, next item will be the first\n      // e.g. sunday => monday\n      const nextIndex = index + 1 === array.length ? 0 : index + 1;\n      const nextItem = array[nextIndex];\n\n      return (\n        <InfoItem key={item.dayOfWeek} currentDay={item} nextDay={nextItem} />\n      );\n    });\n\n  return (\n    <div className=\"content__wrapper\">\n      {renderOpeningHours(props.weeklyOpeningHours)}\n    </div>\n  );\n};\n\nInfoList.propTypes = {\n  weeklyOpeningHours: PropTypes.array\n};\n\nexport default InfoList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InfoList from \"./InfoList\";\nimport \"./OpeningHours.css\";\nimport Typography from \"../ui/Typography\";\nimport clockIcon from \"../../assets/icons/clock-regular.svg\";\n\nimport { connect } from \"react-redux\";\n\nexport class OpeningHours extends Component {\n  static defaultProps = {\n    weeklyOpeningHours: []\n  };\n\n  render() {\n    return (\n      <div className=\"hourwidget\">\n        <div className=\"hourwidget__wrapper\">\n          <div className=\"hourwidget__header\">\n            <div className=\"icon__wrapper\">\n              <img className=\"clock-icon\" src={clockIcon} alt=\"clock icon\" />\n            </div>\n            <Typography variant=\"heading1\">Opening hours</Typography>\n          </div>\n          <div className=\"hourwidget__content\">\n            <InfoList weeklyOpeningHours={this.props.weeklyOpeningHours} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nOpeningHours.propTypes = {\n  weeklyOpeningHours: PropTypes.array\n};\n\nconst mapStateToProps = ({ weeklyOpeningHours }) => {\n  return {\n    weeklyOpeningHours\n  };\n};\nexport default connect(mapStateToProps)(OpeningHours);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport FileInput from \"./components/FileInput\";\nimport OpeningHours from \"./components/OpeningHours\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"left\">\n            <FileInput />\n          </div>\n          <div className=\"right\">\n            <OpeningHours />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport openingHours from \"./openingHours\";\n\nconst rootReducer = combineReducers({\n  weeklyOpeningHours: openingHours\n});\n\nexport default rootReducer;\n","import { GET_JSON_FROM_INPUT } from \"../actions/types\";\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case GET_JSON_FROM_INPUT:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./assets/css/circular-std.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider\n    store={createStore(\n      reducers,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}